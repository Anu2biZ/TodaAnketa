// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const SPREADSHEET_ID = PropertiesService.getScriptProperties().getProperty('SPREADSHEET_ID');
const ONBOARDING_FOLDER_ID = PropertiesService.getScriptProperties().getProperty('ONBOARDING_FOLDER_ID');
const RECIPIENT_EMAIL = PropertiesService.getScriptProperties().getProperty('RECIPIENT_EMAIL');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∞ –≤ —Ç–∞–±–ª–∏—Ü—É
function addLog(message, type = 'INFO') {
  try {
    const ss = SpreadsheetApp.openById(SPREADSHEET_ID);
    let logsSheet = ss.getSheetByName('LOGS');
    
    // –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç LOGS, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!logsSheet) {
      logsSheet = ss.insertSheet('LOGS');
      // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
      logsSheet.getRange('A1:D1').setValues([['Timestamp', 'Type', 'Message', 'Function']])
        .setFontWeight('bold')
        .setBackground('#f3f3f3');
      logsSheet.setFrozenRows(1);
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Å—Ç–æ–ª–±—Ü–æ–≤
      logsSheet.setColumnWidth(1, 180); // Timestamp
      logsSheet.setColumnWidth(2, 80);  // Type
      logsSheet.setColumnWidth(3, 500); // Message
      logsSheet.setColumnWidth(4, 150); // Function
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ —Å—Ç–µ–∫–∞ –≤—ã–∑–æ–≤–æ–≤
    const functionName = (new Error()).stack.split('\n')[2].trim().split(' ')[1] || 'Unknown';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –ª–æ–≥–æ–º
    logsSheet.appendRow([
      new Date(),
      type,
      message,
      functionName
    ]);
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
    const lastRow = logsSheet.getLastRow();
    logsSheet.getRange(lastRow, 1).setNumberFormat('dd.MM.yyyy HH:mm:ss');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –ª–æ–≥–∞
    const typeCell = logsSheet.getRange(lastRow, 2);
    switch (type) {
      case 'ERROR':
        typeCell.setBackground('#ffcdd2'); // –°–≤–µ—Ç–ª–æ-–∫—Ä–∞—Å–Ω—ã–π
        break;
      case 'WARNING':
        typeCell.setBackground('#fff9c4'); // –°–≤–µ—Ç–ª–æ-–∂–µ–ª—Ç—ã–π
        break;
      case 'SUCCESS':
        typeCell.setBackground('#c8e6c9'); // –°–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π
        break;
      default:
        typeCell.setBackground('#ffffff'); // –ë–µ–ª—ã–π –¥–ª—è INFO
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã
    logsSheet.getRange(lastRow, 1, 1, 4).setBorder(true, true, true, true, true, true);
  } catch (error) {
    // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π Logger
    Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥: ' + error.message);
    Logger.log(message);
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ç–∞–±–ª–∏—Ü—ã
function onOpen() {
  const ui = SpreadsheetApp.getUi();
  ui.createMenu('üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ')
    .addItem('üìã –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏', 'viewLogs')
    .addSeparator()
    .addItem('üß™ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞', 'testFileUpload')
    .addItem('‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', 'setup')
    .addToUi();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
function checkAuthorization() {
  addLog(' –ù–ê–ß–ê–õ–û –ü–†–û–í–ï–†–ö–ò –†–ê–ó–†–ï–®–ï–ù–ò–ô ');
  addLog('–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: ' + new Date().toISOString());
  
  const scriptProperties = PropertiesService.getScriptProperties();
  const userProperties = PropertiesService.getUserProperties();
  const authInfo = ScriptApp.getAuthorizationInfo(ScriptApp.AuthMode.FULL);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const authStatus = authInfo.getAuthorizationStatus();
  const statusText = authStatus === ScriptApp.AuthorizationStatus.REQUIRED ? '–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è' :
                    authStatus === ScriptApp.AuthorizationStatus.NOT_REQUIRED ? '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è' :
                    '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å';
  addLog('–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ' + statusText,
    authStatus === ScriptApp.AuthorizationStatus.NOT_REQUIRED ? 'SUCCESS' : 'WARNING');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Å–≤–æ–π—Å—Ç–≤
  const properties = scriptProperties.getProperties();
  addLog('–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
  addLog('- SPREADSHEET_ID: ' + (properties.SPREADSHEET_ID || '–Ω–µ —É–∫–∞–∑–∞–Ω'),
    properties.SPREADSHEET_ID ? 'SUCCESS' : 'WARNING');
  addLog('- ONBOARDING_FOLDER_ID: ' + (properties.ONBOARDING_FOLDER_ID || '–Ω–µ —É–∫–∞–∑–∞–Ω'),
    properties.ONBOARDING_FOLDER_ID ? 'SUCCESS' : 'WARNING');
  addLog('- RECIPIENT_EMAIL: ' + (properties.RECIPIENT_EMAIL || '–Ω–µ —É–∫–∞–∑–∞–Ω'),
    properties.RECIPIENT_EMAIL ? 'SUCCESS' : 'WARNING');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º
  try {
    addLog('–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–∏—Å–∞–º:');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Google Sheets
    if (properties.SPREADSHEET_ID) {
      const ss = SpreadsheetApp.openById(properties.SPREADSHEET_ID);
      addLog('‚úì Google Sheets: –¥–æ—Å—Ç—É–ø –ø–æ–ª—É—á–µ–Ω, —Ç–∞–±–ª–∏—Ü–∞: ' + ss.getName(), 'SUCCESS');
    } else {
      addLog('‚ùå Google Sheets: –Ω–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ (ID –Ω–µ —É–∫–∞–∑–∞–Ω)', 'WARNING');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Google Drive
    if (properties.ONBOARDING_FOLDER_ID) {
      const folder = DriveApp.getFolderById(properties.ONBOARDING_FOLDER_ID);
      addLog('‚úì Google Drive: –¥–æ—Å—Ç—É–ø –ø–æ–ª—É—á–µ–Ω, –ø–∞–ø–∫–∞: ' + folder.getName(), 'SUCCESS');
    } else {
      addLog('‚ùå Google Drive: –Ω–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ (ID –Ω–µ —É–∫–∞–∑–∞–Ω)', 'WARNING');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Gmail
    const quota = MailApp.getRemainingDailyQuota();
    addLog('‚úì Gmail: –¥–æ—Å—Ç—É–ø –ø–æ–ª—É—á–µ–Ω, –¥–æ—Å—Ç—É–ø–Ω–∞—è –∫–≤–æ—Ç–∞: ' + quota, 'SUCCESS');
  } catch (e) {
    addLog('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–∞: ' + e.message, 'ERROR');
  }
  
  addLog(' –ü–†–û–í–ï–†–ö–ê –†–ê–ó–†–ï–®–ï–ù–ò–ô –ó–ê–í–ï–†–®–ï–ù–ê ', 'SUCCESS');
  return '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–ª–∏—Ü—É LOGS –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
function requestAuthorization() {
  addLog(' –ù–ê–ß–ê–õ–û –ó–ê–ü–†–û–°–ê –†–ê–ó–†–ï–®–ï–ù–ò–ô ');
  addLog('–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: ' + new Date().toISOString());

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ ID
    const scriptProperties = PropertiesService.getScriptProperties();
    const properties = scriptProperties.getProperties();
    
    if (!properties.SPREADSHEET_ID || !properties.ONBOARDING_FOLDER_ID) {
      throw new Error('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ SPREADSHEET_ID –∏ ONBOARDING_FOLDER_ID –≤ Script Properties');
    }

    addLog('–ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è Google Sheets...');
    const ss = SpreadsheetApp.openById(properties.SPREADSHEET_ID);
    addLog('–î–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ –ø–æ–ª—É—á–µ–Ω: ' + ss.getName(), 'SUCCESS');

    addLog('–ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è Google Drive...');
    const folder = DriveApp.getFolderById(properties.ONBOARDING_FOLDER_ID);
    addLog('–î–æ—Å—Ç—É–ø –∫ –ø–∞–ø–∫–µ –ø–æ–ª—É—á–µ–Ω: ' + folder.getName(), 'SUCCESS');

    addLog('–ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è Gmail...');
    const quota = MailApp.getRemainingDailyQuota();
    addLog('–î–æ—Å—Ç—É–ø –∫ –ø–æ—á—Ç–µ –ø–æ–ª—É—á–µ–Ω. –î–æ—Å—Ç—É–ø–Ω–∞—è –∫–≤–æ—Ç–∞: ' + quota, 'SUCCESS');

    addLog(' –†–ê–ó–†–ï–®–ï–ù–ò–Ø –£–°–ü–ï–®–ù–û –ü–û–õ–£–ß–ï–ù–´ ', 'SUCCESS');
    return '–†–∞–∑—Ä–µ—à–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã. –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é setup.';
  } catch (error) {
    addLog('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: ' + error.message, 'ERROR');
    throw new Error(error.message);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
function setup() {
  addLog(' –ù–ê–ß–ê–õ–û –ù–ê–°–¢–†–û–ô–ö–ò ');
  addLog('–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: ' + new Date().toISOString());

  try {
    const scriptProperties = PropertiesService.getScriptProperties();
    const properties = scriptProperties.getProperties();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º ID —Ç–∞–±–ª–∏—Ü—ã
    addLog('–ü—Ä–æ–≤–µ—Ä—è–µ–º SPREADSHEET_ID...');
    if (!properties.SPREADSHEET_ID) {
      throw new Error('SPREADSHEET_ID –Ω–µ —É–∫–∞–∑–∞–Ω');
    }
    addLog('SPREADSHEET_ID: ' + properties.SPREADSHEET_ID, 'SUCCESS');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º ID –ø–∞–ø–∫–∏
    addLog('–ü—Ä–æ–≤–µ—Ä—è–µ–º ONBOARDING_FOLDER_ID...');
    if (!properties.ONBOARDING_FOLDER_ID) {
      throw new Error('ONBOARDING_FOLDER_ID –Ω–µ —É–∫–∞–∑–∞–Ω');
    }
    addLog('ONBOARDING_FOLDER_ID: ' + properties.ONBOARDING_FOLDER_ID, 'SUCCESS');

    // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ
    addLog('–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ...');
    let ss;
    try {
      ss = SpreadsheetApp.openById(properties.SPREADSHEET_ID);
      addLog('–¢–∞–±–ª–∏—Ü–∞ –Ω–∞–π–¥–µ–Ω–∞: ' + ss.getName(), 'SUCCESS');
    } catch (e) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ: ' + e.message);
    }

    addLog('–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ª–∏—Å—Ç–∞ Onboarding...');
    const sheet = ss.getSheetByName('Onboarding');
    if (!sheet) {
      throw new Error('–õ–∏—Å—Ç "Onboarding" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ');
    }
    addLog('–õ–∏—Å—Ç Onboarding –Ω–∞–π–¥–µ–Ω', 'SUCCESS');

    // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–∞–ø–∫–µ
    addLog('–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø–∞–ø–∫–µ...');
    let folder;
    try {
      folder = DriveApp.getFolderById(properties.ONBOARDING_FOLDER_ID);
      addLog('–ü–∞–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: ' + folder.getName(), 'SUCCESS');
    } catch (e) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–∞–ø–∫–µ: ' + e.message);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –ø–∞–ø–∫–∏
    addLog('–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏...');
    let testFolder;
    try {
      testFolder = folder.createFolder('test_' + new Date().getTime());
      testFolder.setDescription('–¢–µ—Å—Ç–æ–≤–∞—è –ø–∞–ø–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π');
      addLog('–¢–µ—Å—Ç–æ–≤–∞—è –ø–∞–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞', 'SUCCESS');
    } catch (e) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –ø–∞–ø–∫—É: ' + e.message);
    }

    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–∞–ø–∫—É
    try {
      testFolder.setTrashed(true);
      addLog('–¢–µ—Å—Ç–æ–≤–∞—è –ø–∞–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∞', 'SUCCESS');
    } catch (e) {
      addLog('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –ø–∞–ø–∫—É: ' + e.message, 'WARNING');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏ email
    addLog('–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email...');
    if (!properties.RECIPIENT_EMAIL) {
      addLog('–í–ù–ò–ú–ê–ù–ò–ï: RECIPIENT_EMAIL –Ω–µ —É–∫–∞–∑–∞–Ω. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ email —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –±—É–¥—É—Ç.', 'WARNING');
    } else {
      addLog('Email –ø–æ–ª—É—á–∞—Ç–µ–ª—è —É–∫–∞–∑–∞–Ω: ' + properties.RECIPIENT_EMAIL, 'SUCCESS');
    }

    addLog(' –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û ', 'SUCCESS');
    return '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–ª–∏—Ü—É LOGS –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.';
  } catch (error) {
    addLog('–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ: ' + error.message, 'ERROR');
    throw new Error(error.message);
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ GET-–∑–∞–ø—Ä–æ—Å–æ–≤
function doGet(e) {
  return ContentService.createTextOutput(JSON.stringify({
    status: 'success',
    message: 'API is running'
  })).setMimeType(ContentService.MimeType.JSON);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ POST-–∑–∞–ø—Ä–æ—Å–æ–≤
function doPost(e) {
  addLog('=================== –ù–ê–ß–ê–õ–û –û–ë–†–ê–ë–û–¢–ö–ò POST –ó–ê–ü–†–û–°–ê ===================');
  addLog('–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: ' + new Date().toISOString());
  
  let lock = null;
  const properties = PropertiesService.getScriptProperties().getProperties();
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
  const acquireLock = () => {
    const maxAttempts = 3;
    const waitTime = 10000; // 10 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
    
    for (let attempt = 1; attempt <= maxAttempts; attempt++) {
      try {
        addLog(`–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ ${attempt}/${maxAttempts}...`);
        lock = LockService.getScriptLock();
        lock.waitLock(60000); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º-–∞—É—Ç –¥–æ 60 —Å–µ–∫—É–Ω–¥
        addLog('–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞', 'SUCCESS');
        return true;
      } catch (error) {
        if (attempt === maxAttempts) {
          addLog(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–æ—Å–ª–µ ${maxAttempts} –ø–æ–ø—ã—Ç–æ–∫`, 'ERROR');
          throw error;
        }
        addLog(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É, –ø–æ–ø—ã—Ç–∫–∞ ${attempt}. –û–∂–∏–¥–∞–Ω–∏–µ ${waitTime/1000} —Å–µ–∫—É–Ω–¥...`, 'WARNING');
        Utilities.sleep(waitTime);
      }
    }
    return false;
  };
  
  try {
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    addLog('–ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞...');
    addLog('–¢–∏–ø –∑–∞–ø—Ä–æ—Å–∞: ' + (e.postData ? e.postData.type : '–æ–±—ã—á–Ω—ã–π POST'));
    addLog('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ URL: ' + JSON.stringify(e.parameter));
    addLog('–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞: ' + (e.postData ? e.postData.contents : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'));
    
    let params = {};
    
    // –ï—Å–ª–∏ —ç—Ç–æ multipart/form-data –∑–∞–ø—Ä–æ—Å
    if (e.postData && e.postData.type === "multipart/form-data") {
      addLog('–û–±—Ä–∞–±–æ—Ç–∫–∞ multipart/form-data –∑–∞–ø—Ä–æ—Å–∞:');
      addLog('- Content-Type: ' + e.postData.type);
      addLog('- Content-Length: ' + e.postData.length);
      addLog('- Parameter count: ' + Object.keys(e.parameter || {}).length);
      addLog('- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: ' + JSON.stringify(e.parameter));
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö (–º–∞–∫—Å–∏–º—É–º 5MB –¥–ª—è —á–∞–Ω–∫–∞)
      const maxSize = 5 * 1024 * 1024;
      if (e.postData.length > maxSize) {
        addLog('–ü—Ä–µ–≤—ã—à–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: ' + e.postData.length + ' (–º–∞–∫—Å–∏–º—É–º: ' + maxSize + ')', 'ERROR');
        throw new Error('–†–∞–∑–º–µ—Ä —á–∞–Ω–∫–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 5MB');
      }
      addLog('–†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã', 'SUCCESS');
      
      // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ FormData –∏ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
      for (let key in e.parameter) {
        params[key] = e.parameter[key];
      }
      
      // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
      if (e.postData.contents) {
        try {
          const postParams = JSON.parse(e.postData.contents);
          for (let key in postParams) {
            params[key] = postParams[key];
          }
          addLog('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã', 'SUCCESS');
        } catch (err) {
          // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ JSON, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –æ–±—ã—á–Ω—ã–µ form-data –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
          addLog('–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –∫–∞–∫ JSON', 'WARNING');
        }
      }
    } else {
      // –û–±—ã—á–Ω—ã–π POST –∑–∞–ø—Ä–æ—Å
      params = e.parameter;
      
      // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
      if (e.postData && e.postData.contents) {
        try {
          const postParams = JSON.parse(e.postData.contents);
          for (let key in postParams) {
            params[key] = postParams[key];
          }
          addLog('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã', 'SUCCESS');
        } catch (err) {
          addLog('–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –∫–∞–∫ JSON', 'WARNING');
        }
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    if (!params || Object.keys(params).length === 0) {
      throw new Error('No parameters provided');
    }

    addLog('–¢–∏–ø —Ñ–æ—Ä–º—ã: ' + params.form_type);
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–æ—Ä–º—ã
    let result;
    switch (params.form_type) {
      case 'onboarding':
        // –î–ª—è —Ñ–æ—Ä–º—ã onboarding –Ω—É–∂–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞, —Ç–∞–∫ –∫–∞–∫ –º—ã –ø–∏—à–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É
        if (!acquireLock()) {
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É');
        }
        try {
          result = handleOnboardingForm(params);
          addLog('–§–æ—Ä–º–∞ Onboarding —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞', 'SUCCESS');
        } finally {
          if (lock && lock.hasLock()) {
            lock.releaseLock();
            addLog('–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∞', 'SUCCESS');
          }
        }
        break;
      case 'file_upload':
        // –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ –Ω—É–∂–Ω–∞
        result = handleFileUpload(params);
        addLog('–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞', 'SUCCESS');
        break;
      default:
        throw new Error('Unsupported form type: ' + params.form_type);
    }
    
    return result;
  } catch (error) {
    addLog('–û—à–∏–±–∫–∞ –≤ doPost: ' + error.message, 'ERROR');
    addLog('Stack: ' + error.stack, 'ERROR');
    return ContentService.createTextOutput(JSON.stringify({
      status: 'error',
      message: error.toString()
    })).setMimeType(ContentService.MimeType.JSON);
  } finally {
    if (lock && lock.hasLock()) {
      lock.releaseLock();
      addLog('–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∞', 'SUCCESS');
    }
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã Onboarding
function handleOnboardingForm(params) {
  addLog(' –ù–ê–ß–ê–õ–û –û–ë–†–ê–ë–û–¢–ö–ò –§–û–†–ú–´ ONBOARDING ');
  addLog('–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: ' + new Date().toISOString());
  
  try {
    addLog('–ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ...');
    const properties = PropertiesService.getScriptProperties().getProperties();
    const ss = SpreadsheetApp.openById(properties.SPREADSHEET_ID);
    const sheet = ss.getSheetByName('Onboarding');
    addLog('–î–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ –ø–æ–ª—É—á–µ–Ω', 'SUCCESS');
    
    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    addLog('–°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞: ' + params.project_name);
    const userFolder = createUserFolder(params.project_name);
    addLog('–ü–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: ' + userFolder.getName(), 'SUCCESS');
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏
    addLog('–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏...');
    const rowData = [
      params.sale_name,
      params.project_name,
      params.telegram_group,
      // –î–∞–Ω–Ω—ã–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤
      params.compliance_full_name,
      params.compliance_position,
      params.compliance_telegram,
      params.compliance_email,
      params.legal_full_name,
      params.legal_position,
      params.legal_telegram,
      params.legal_email,
      params.chargeback_full_name,
      params.chargeback_position,
      params.chargeback_telegram,
      params.chargeback_email,
      params.finance_full_name,
      params.finance_position,
      params.finance_telegram,
      params.finance_email,
      params.technical_full_name,
      params.technical_position,
      params.technical_telegram,
      params.technical_email,
      // –û—Å—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      params.comments,
      params.company_name,
      params.legal_address,
      params.registration_date,
      params.registration_number,
      params.license_jurisdiction,
      params.license_number,
      params.project_nature,
      params.industries,
      params.not_belongs_to_psp,
      params.website,
      params.ubo_country_citizenship,
      params.ubo_country_residence,
      params.director_country_citizenship,
      params.director_country_residence,
      params.shareholder_country_citizenship,
      params.shareholder_country_residence,
      params.urls,
      // –°—Ç–∞—Ç—É—Å—ã —Ñ–∞–π–ª–æ–≤
      params.processing_history,
      params.chargeback_statistics,
      params.incorporation,
      params.incumbency,
      params.articles,
      params.ownershipChart,
      params.boardOfDirectors,
      params.shareholderRegister,
      params.operatingLicense,
      params.amlPolicy,
      params.mlroInformation,
      params.kycDocuments,
      params.legalEntityDocuments,
      new Date() // –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏
    ];
    addLog('–î–∞–Ω–Ω—ã–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã', 'SUCCESS');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É
    addLog('–î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É...');
    const lastRow = sheet.getLastRow();
    sheet.getRange(lastRow + 1, 1, 1, rowData.length).setValues([rowData]);
    addLog('–î–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å—Ç—Ä–æ–∫—É ' + (lastRow + 1), 'SUCCESS');
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —è—á–µ–π–∫–∏
    addLog('–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —è—á–µ–π–∫–∏...');
    formatNewRow(sheet, lastRow + 1);
    addLog('–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ', 'SUCCESS');
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    addLog('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ...');
    sendNotification(params);
    addLog('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', 'SUCCESS');
    
    const response = {
      status: 'success',
      folderId: userFolder.getId()
    };
    
    addLog('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç: ' + JSON.stringify(response), 'SUCCESS');
    addLog(' –û–ë–†–ê–ë–û–¢–ö–ê –§–û–†–ú–´ –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û ', 'SUCCESS');
    
    return ContentService.createTextOutput(JSON.stringify(response))
      .setMimeType(ContentService.MimeType.JSON);
  } catch (error) {
    addLog('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ä–º—ã: ' + error.message, 'ERROR');
    throw error;
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function createUserFolder(projectName) {
  addLog('–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞: ' + projectName);
  try {
    const properties = PropertiesService.getScriptProperties().getProperties();
    const rootFolder = DriveApp.getFolderById(properties.ONBOARDING_FOLDER_ID);
    const folderName = `${projectName}_${new Date().toISOString().split('T')[0]}`;
    const newFolder = rootFolder.createFolder(folderName);
    addLog('–ü–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ: ' + newFolder.getName(), 'SUCCESS');
    return newFolder;
  } catch (error) {
    addLog('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞–ø–∫–∏: ' + error.message, 'ERROR');
    throw error;
  }
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
function formatNewRow(sheet, row) {
  addLog('–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ ' + row);
  try {
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
    addLog('–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã...');
    const dateCell = sheet.getRange(row, sheet.getLastColumn());
    dateCell.setNumberFormat('dd.MM.yyyy HH:mm:ss');
    
    // –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
    addLog('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è...');
    sheet.getRange(row, 1, 1, sheet.getLastColumn()).setHorizontalAlignment('center');
    
    // –ì—Ä–∞–Ω–∏—Ü—ã —è—á–µ–µ–∫
    addLog('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–∞–Ω–∏—Ü...');
    sheet.getRange(row, 1, 1, sheet.getLastColumn()).setBorder(true, true, true, true, true, true);
    
    addLog('–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ', 'SUCCESS');
  } catch (error) {
    addLog('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Ç—Ä–æ–∫–∏: ' + error.message, 'ERROR');
    throw error;
  }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function sendNotification(params) {
  addLog('–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ...');
  try {
    const properties = PropertiesService.getScriptProperties().getProperties();
    if (!properties.RECIPIENT_EMAIL) {
      addLog('Email –ø–æ–ª—É—á–∞—Ç–µ–ª—è –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö', 'WARNING');
      return;
    }
    
    const emailSubject = `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ Onboarding: ${params.project_name}`;
    const emailBody = `
      –ü–æ–ª—É—á–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ Onboarding:
      
      –ü—Ä–æ–µ–∫—Ç: ${params.project_name}
      –ö–æ–º–ø–∞–Ω–∏—è: ${params.company_name}
      –ú–µ–Ω–µ–¥–∂–µ—Ä: ${params.sale_name}
      
      –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Google Sheets.
    `;
    
    MailApp.sendEmail(properties.RECIPIENT_EMAIL, emailSubject, emailBody);
    addLog('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ ' + properties.RECIPIENT_EMAIL, 'SUCCESS');
  } catch (error) {
    addLog('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ' + error.message, 'ERROR');
    throw error;
  }
}

// –ö—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞–Ω–∫–æ–≤ —Ñ–∞–π–ª–æ–≤
const fileChunksCache = {};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
function handleFileUpload(params) {
  addLog(' –ù–ê–ß–ê–õ–û –ó–ê–ì–†–£–ó–ö–ò –§–ê–ô–õ–ê ');
  addLog('–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: ' + new Date().toISOString());
  
  try {
    // –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    addLog('–í—Ö–æ–¥—è—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:');
    addLog('form_type: ' + params.form_type);
    addLog('type: ' + params.type);
    addLog('index: ' + params.index);
    addLog('chunk_index: ' + params.chunk_index);
    addLog('total_chunks: ' + params.total_chunks);
    addLog('folderId: ' + params.folderId);
    addLog('filename: ' + params.filename);
    addLog('contentType: ' + params.contentType);
    addLog('file length: ' + (params.file ? params.file.length : 'no file'));

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    if (!params.form_type || params.form_type !== 'file_upload') {
      throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø —Ñ–æ—Ä–º—ã: ' + params.form_type);
    }
    if (!params.file) {
      throw new Error('–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö');
    }
    if (!params.folderId) {
      throw new Error('ID –ø–∞–ø–∫–∏ –Ω–µ —É–∫–∞–∑–∞–Ω');
    }
    if (!params.type) {
      throw new Error('–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω');
    }
    if (!params.filename) {
      throw new Error('–ò–º—è —Ñ–∞–π–ª–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–æ');
    }
    if (!params.contentType) {
      throw new Error('–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω');
    }
    if (params.chunk_index === undefined || params.total_chunks === undefined) {
      throw new Error('–ù–µ —É–∫–∞–∑–∞–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞–Ω–∫–∞—Ö');
    }

    addLog('–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç', 'SUCCESS');
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø–∞–ø–∫–µ
    addLog('–ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø–∞–ø–∫–µ: ' + params.folderId);
    let folder;
    try {
      folder = DriveApp.getFolderById(params.folderId);
      addLog('–ü–∞–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: ' + folder.getName(), 'SUCCESS');
    } catch (folderError) {
      addLog('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–∞–ø–∫–∏: ' + folderError.message, 'ERROR');
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–∞–ø–∫–µ: ' + folderError.message);
    }

    // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è —Ñ–∞–π–ª–∞
    const fileKey = `${params.folderId}_${params.type}_${params.index}_${params.filename}`;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫—ç—à–∞ –¥–ª—è —Ñ–∞–π–ª–∞
    if (!fileChunksCache[fileKey]) {
      fileChunksCache[fileKey] = {
        chunks: new Array(parseInt(params.total_chunks)),
        receivedChunks: 0
      };
      addLog(`–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∫—ç—à –¥–ª—è —Ñ–∞–π–ª–∞ ${fileKey}`, 'SUCCESS');
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —á–∞–Ω–∫
    addLog(`–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–∞–Ω–∫–∞ ${parseInt(params.chunk_index) + 1}/${params.total_chunks}`);
    const chunkIndex = parseInt(params.chunk_index);
    fileChunksCache[fileKey].chunks[chunkIndex] = params.file;
    fileChunksCache[fileKey].receivedChunks++;

    addLog(`–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: –ø–æ–ª—É—á–µ–Ω–æ ${fileChunksCache[fileKey].receivedChunks} –∏–∑ ${params.total_chunks} —á–∞–Ω–∫–æ–≤`);

    // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞–Ω–∫, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (fileChunksCache[fileKey].receivedChunks < params.total_chunks) {
      addLog(`–ü–æ–ª—É—á–µ–Ω–æ ${fileChunksCache[fileKey].receivedChunks} –∏–∑ ${params.total_chunks} —á–∞–Ω–∫–æ–≤`, 'SUCCESS');
      return ContentService.createTextOutput(JSON.stringify({
        status: 'chunk_received',
        message: `Chunk ${params.chunk_index + 1}/${params.total_chunks} received`
      })).setMimeType(ContentService.MimeType.JSON);
    }

    // –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã –≤—Å–µ —á–∞–Ω–∫–∏, —Å–æ–±–∏—Ä–∞–µ–º —Ñ–∞–π–ª
    addLog('–ü–æ–ª—É—á–µ–Ω—ã –≤—Å–µ —á–∞–Ω–∫–∏, —Å–æ–±–∏—Ä–∞–µ–º —Ñ–∞–π–ª...');
    const completeBase64 = fileChunksCache[fileKey].chunks.join('');
    delete fileChunksCache[fileKey]; // –û—á–∏—â–∞–µ–º –∫—ç—à

    // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª
    const fileName = `${params.type}_${params.index || 1}${getFileExtension(params.filename)}`;
    addLog('–ò–º—è —Ñ–∞–π–ª–∞: ' + fileName);

    try {
      // –î–µ–∫–æ–¥–∏—Ä—É–µ–º base64
      addLog('–î–µ–∫–æ–¥–∏—Ä—É–µ–º base64...');
      const decodedData = Utilities.base64Decode(completeBase64);
      addLog('–î–∞–Ω–Ω—ã–µ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω—ã, —Ä–∞–∑–º–µ—Ä: ' + decodedData.length, 'SUCCESS');

      // –°–æ–∑–¥–∞–µ–º blob
      addLog('–°–æ–∑–¥–∞–µ–º blob...');
      const fileBlob = Utilities.newBlob(decodedData, params.contentType, fileName);
      addLog('Blob —Å–æ–∑–¥–∞–Ω', 'SUCCESS');

      // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª
      addLog('–°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤ Drive...');
      const file = folder.createFile(fileBlob);
      addLog('–§–∞–π–ª —Å–æ–∑–¥–∞–Ω, ID: ' + file.getId(), 'SUCCESS');

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–º—è
      file.setName(fileName);
      addLog('–ò–º—è —Ñ–∞–π–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: ' + file.getName(), 'SUCCESS');

      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–æ—Å—Ç—É–ø
      file.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
      addLog('–ù–∞—Å—Ç—Ä–æ–µ–Ω –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª—É', 'SUCCESS');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
      addLog('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞:');
      addLog('- ID: ' + file.getId());
      addLog('- –ò–º—è: ' + file.getName());
      addLog('- –†–∞–∑–º–µ—Ä: ' + file.getSize());
      addLog('- URL: ' + file.getUrl());

      const response = {
        status: 'success',
        fileId: file.getId(),
        fileUrl: file.getUrl(),
        fileName: file.getName()
      };

      addLog('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç: ' + JSON.stringify(response), 'SUCCESS');
      return ContentService.createTextOutput(JSON.stringify(response))
        .setMimeType(ContentService.MimeType.JSON);
    } catch (error) {
      addLog('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: ' + error.message, 'ERROR');
      throw error;
    }
  } catch (error) {
    addLog('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: ' + error.message, 'ERROR');
    return ContentService.createTextOutput(JSON.stringify({
      status: 'error',
      message: error.toString()
    })).setMimeType(ContentService.MimeType.JSON);
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–∞
function getFileExtension(filename) {
  addLog('–ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è —Ñ–∞–π–ª–∞: ' + filename);
  const lastDotIndex = filename.lastIndexOf('.');
  addLog('–ò–Ω–¥–µ–∫—Å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç–æ—á–∫–∏: ' + lastDotIndex);
  
  if (lastDotIndex === -1) {
    addLog('–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ', 'WARNING');
    return '';
  }
  
  const extension = filename.slice(lastDotIndex);
  addLog('–ù–∞–π–¥–µ–Ω–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ: ' + extension, 'SUCCESS');
  return extension;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
function viewLogs() {
  const ui = SpreadsheetApp.getUi();
  const ss = SpreadsheetApp.openById(SPREADSHEET_ID);
  const logsSheet = ss.getSheetByName('LOGS');
  
  if (!logsSheet) {
    ui.alert('–õ–æ–≥–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç', '–õ–∏—Å—Ç LOGS –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ.', ui.ButtonSet.OK);
    return;
  }
  
  const lastRow = logsSheet.getLastRow();
  if (lastRow <= 1) {
    ui.alert('–õ–æ–≥–∏ –ø—É—Å—Ç—ã', '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ª–æ–≥–æ–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.', ui.ButtonSet.OK);
    return;
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ª–æ–≥–æ–≤
  const range = logsSheet.getRange(1, 1, lastRow, 4);
  const values = range.getValues();
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏ –≤ HTML
  let html = '<style>' +
    'table { border-collapse: collapse; width: 100%; }' +
    'th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }' +
    'th { background-color: #f3f3f3; }' +
    '.ERROR { background-color: #ffcdd2; }' +
    '.WARNING { background-color: #fff9c4; }' +
    '.SUCCESS { background-color: #c8e6c9; }' +
    '</style>' +
    '<table><tr><th>–í—Ä–µ–º—è</th><th>–¢–∏–ø</th><th>–°–æ–æ–±—â–µ–Ω–∏–µ</th><th>–§—É–Ω–∫—Ü–∏—è</th></tr>';
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–æ–≤
  for (let i = 1; i < values.length; i++) {
    const [timestamp, type, message, func] = values[i];
    html += `<tr class="${type}">` +
      `<td>${Utilities.formatDate(timestamp, Session.getScriptTimeZone(), 'dd.MM.yyyy HH:mm:ss')}</td>` +
      `<td>${type}</td>` +
      `<td>${message}</td>` +
      `<td>${func}</td>` +
      '</tr>';
  }
  html += '</table>';
  
  // –°–æ–∑–¥–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É
  const output = HtmlService
    .createHtmlOutput(html)
    .setTitle('–õ–æ–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
    .setWidth(900)
    .setHeight(600);
  
  ui.showModelessDialog(output, '–õ–æ–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
function testFileUpload() {
  addLog(' –ù–ê–ß–ê–õ–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ó–ê–ì–†–£–ó–ö–ò –§–ê–ô–õ–ê ');
  addLog('–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: ' + new Date().toISOString());
  
  try {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    addLog('–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª...');
    const testContent = 'Test file content ' + new Date().toISOString();
    const testBlob = Utilities.newBlob(testContent, 'text/plain', 'test.txt');
    const base64Data = Utilities.base64Encode(testContent);
    addLog('–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω, —Ä–∞–∑–º–µ—Ä: ' + testContent.length + ' –±–∞–π—Ç', 'SUCCESS');
    
    // –ü–æ–ª—É—á–∞–µ–º ID –ø–∞–ø–∫–∏
    addLog('–ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...');
    const properties = PropertiesService.getScriptProperties().getProperties();
    if (!properties.ONBOARDING_FOLDER_ID) {
      throw new Error('ONBOARDING_FOLDER_ID –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö');
    }
    addLog('ONBOARDING_FOLDER_ID –ø–æ–ª—É—á–µ–Ω: ' + properties.ONBOARDING_FOLDER_ID, 'SUCCESS');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø–∞–ø–∫–µ
    addLog('–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø–∞–ø–∫–µ...');
    const folder = DriveApp.getFolderById(properties.ONBOARDING_FOLDER_ID);
    addLog('–ü–∞–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: ' + folder.getName(), 'SUCCESS');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ–¥–ø–∞–ø–∫—É
    addLog('–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ–¥–ø–∞–ø–∫—É...');
    const testFolder = folder.createFolder('test_upload_' + new Date().getTime());
    addLog('–¢–µ—Å—Ç–æ–≤–∞—è –ø–æ–¥–ø–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: ' + testFolder.getName(), 'SUCCESS');
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º —Ä–∞–∑–±–∏–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–∞ —á–∞–Ω–∫–∏
    const chunkSize = 256 * 1024; // 256KB
    const totalChunks = Math.ceil(base64Data.length / chunkSize);
    addLog(`–†–∞–∑–±–∏–≤–∞–µ–º —Ñ–∞–π–ª –Ω–∞ ${totalChunks} —á–∞–Ω–∫–æ–≤ –ø–æ ${chunkSize} –±–∞–π—Ç`);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —á–∞–Ω–∫–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
    let finalResult;
    for (let i = 0; i < totalChunks; i++) {
      const start = i * chunkSize;
      const end = Math.min(start + chunkSize, base64Data.length);
      const chunk = base64Data.substring(start, end);
      
      // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞–Ω–∫–∞
      const params = {
        form_type: 'file_upload',
        folderId: testFolder.getId(),
        type: 'TEST',
        filename: 'test.txt',
        contentType: 'text/plain',
        file: chunk,
        index: 1,
        chunk_index: i,
        total_chunks: totalChunks
      };
      
      addLog(`–ó–∞–≥—Ä—É–∑–∫–∞ —á–∞–Ω–∫–∞ ${i + 1}/${totalChunks}...`);
      addLog('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —á–∞–Ω–∫–∞: ' + JSON.stringify(params, null, 2));
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —á–∞–Ω–∫
      const result = handleFileUpload(params);
      const response = JSON.parse(result.getContent());
      
      if (response.status === 'error') {
        throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞–Ω–∫–∞ ${i + 1}: ${response.message}`);
      }
      
      addLog(`–ß–∞–Ω–∫ ${i + 1}/${totalChunks} –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ`, 'SUCCESS');
      
      // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞–Ω–∫, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      if (i === totalChunks - 1) {
        finalResult = result;
      } else {
        // –î–µ–ª–∞–µ–º –ø–∞—É–∑—É –º–µ–∂–¥—É –∑–∞–≥—Ä—É–∑–∫–∞–º–∏ —á–∞–Ω–∫–æ–≤
        Utilities.sleep(1000);
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —á–∞–Ω–∫–æ–≤
    const response = JSON.parse(finalResult.getContent());
    addLog('–û—Ç–≤–µ—Ç –æ—Ç handleFileUpload: ' + JSON.stringify(response, null, 2), 
      response.status === 'success' ? 'SUCCESS' : 'ERROR');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (response.status === 'success') {
      addLog('–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª...');
      const uploadedFile = DriveApp.getFileById(response.fileId);
      const fileInfo = {
        name: uploadedFile.getName(),
        size: uploadedFile.getSize(),
        url: uploadedFile.getUrl(),
        mimeType: uploadedFile.getMimeType(),
        dateCreated: uploadedFile.getDateCreated(),
        access: uploadedFile.getSharingAccess(),
        permission: uploadedFile.getSharingPermission()
      };
      addLog('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ: ' + JSON.stringify(fileInfo, null, 2), 'SUCCESS');
    }
    
    addLog(' –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û ', 'SUCCESS');
    return '–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–ª–∏—Ü—É LOGS –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.';
  } catch (error) {
    const errorMessage = '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ' + error.message;
    addLog(errorMessage, 'ERROR');
    throw new Error(errorMessage);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ä–º—ã
function testScript() {
  addLog(' –ù–ê–ß–ê–õ–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –§–û–†–ú–´ ');
  addLog('–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: ' + new Date().toISOString());

  // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  const testParams = {
    form_type: 'onboarding',
    project_name: 'Test Project',
    telegram_group: 'test_group',
    sale_name: 'Test Manager',
    company_name: 'Test Company',
    comments: 'Test Comment',
    // –î–æ–±–∞–≤–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    compliance_full_name: 'NO',
    compliance_position: 'NO',
    compliance_telegram: 'NO',
    compliance_email: 'NO',
    legal_full_name: 'NO',
    legal_position: 'NO',
    legal_telegram: 'NO',
    legal_email: 'NO',
    chargeback_full_name: 'NO',
    chargeback_position: 'NO',
    chargeback_telegram: 'NO',
    chargeback_email: 'NO',
    finance_full_name: 'NO',
    finance_position: 'NO',
    finance_telegram: 'NO',
    finance_email: 'NO',
    technical_full_name: 'NO',
    technical_position: 'NO',
    technical_telegram: 'NO',
    technical_email: 'NO',
    legal_address: 'Test Address',
    registration_date: '01.01.2023',
    registration_number: '12345',
    license_jurisdiction: 'NO',
    license_number: 'NO',
    project_nature: 'Test Nature',
    industries: 'NO',
    not_belongs_to_psp: false,
    website: 'NO',
    ubo_country_citizenship: 'Test Country',
    ubo_country_residence: 'Test Country',
    director_country_citizenship: 'Test Country',
    director_country_residence: 'Test Country',
    shareholder_country_citizenship: 'Test Country',
    shareholder_country_residence: 'Test Country',
    urls: 'test.com',
    processing_history: 'NO',
    chargeback_statistics: 'NO',
    incorporation: 'NO',
    incumbency: 'NO',
    articles: 'NO',
    ownershipChart: 'NO',
    boardOfDirectors: 'NO',
    shareholderRegister: 'NO',
    operatingLicense: 'NO',
    amlPolicy: 'NO',
    mlroInformation: 'NO',
    kycDocuments: 'NO',
    legalEntityDocuments: 'NO'
  };

  // –ò–º–∏—Ç–∏—Ä—É–µ–º POST-–∑–∞–ø—Ä–æ—Å
  const testEvent = { parameter: testParams };
  
  try {
    addLog('–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞...');
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    addLog('–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
    setup();
    addLog('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ', 'SUCCESS');
    
    // –ó–∞—Ç–µ–º –ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    addLog('–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    const result = doPost(testEvent);
    const response = JSON.parse(result.getContent());
    addLog('–û—Ç–≤–µ—Ç: ' + JSON.stringify(response, null, 2), 
      response.status === 'success' ? 'SUCCESS' : 'ERROR');
    
    addLog(' –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û ', 'SUCCESS');
    return '–¢–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–ª–∏—Ü—É LOGS –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.';
  } catch (error) {
    const errorMessage = '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: ' + error.message;
    addLog(errorMessage, 'ERROR');
    throw new Error(errorMessage);
  }
}
